/*
 * 这个 build 文件是由 Gradle 的 `init` 任务生成的。
 *
 * 更多关于在 Gradle 中构建 Java 项目的信息可以查看 Gradle 用户文档中的
 * Java 项目快速启动章节
 * https://docs.gradle.org/4.0/userguide/tutorial_java_projects.html
 */
// 在这个区块中你可以声明你的 build 脚本需要的依赖和解析下载该依赖所使用的仓储位置
buildscript {
    ext {
        springBootVersion = '2.0.1.RELEASE'
        propDepsVersion = '0.0.9.RELEASE'
        springFoxVersion = '2.8.1-SNAPSHOT'
    }
    repositories {
        maven { url('http://maven.aliyun.com/nexus/content/groups/public/') }
        maven { url('http://maven.aliyun.com/nexus/content/repositories/jcenter') }
        maven { url('http://repo.spring.io/plugins-release') }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:propdeps-plugin:${propDepsVersion}")
    }
}

allprojects {
    group = 'dev.local.gtm'
    repositories {
        maven { setUrl('http://maven.aliyun.com/nexus/content/groups/public/') }
        maven { setUrl('http://maven.aliyun.com/nexus/content/repositories/jcenter') }
    }
}

subprojects {
    version = "0.0.1"
    tasks.withType(Jar) {
        baseName = "$project.name"
    }
    apply plugin: 'java'
    apply plugin: 'idea'
    apply from: '../gradle/docker.gradle'
    apply plugin: 'eclipse'
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-idea'
    apply plugin: 'io.spring.dependency-management'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    dependencies {
        optional("org.springframework.boot:spring-boot-devtools")
        optional("org.projectlombok:lombok")
        optional("org.springframework.boot:spring-boot-configuration-processor")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
    }
    compileJava.dependsOn(processResources)
}
