apply plugin: 'org.springframework.boot'
repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
    maven { url 'https://jitpack.io' }
}
configurations {
    springLoaded
    // 如果使用 undertow 或 jetty 需要把默认包含的 tomcat 排除在外
    compile.exclude module: 'spring-boot-starter-tomcat'
}
test {
    systemProperties['spring.profiles.active'] = 'test'
}
dependencies {
    implementation("com.github.stuxuhai:jpinyin:${jPinyinVersion}")
    // implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
    implementation("de.codecentric:spring-boot-admin-starter-client:${springbootAdminVersion}")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDataTypeJsr310Version}")
    implementation("cn.jpush.api:jpush-client:${jpushVersion}") {
        exclude group: "org.apache.httpcomponents", module: "httpclient"
        exclude group: "commons-logging", module: "commons-logging"
    }
    implementation("com.amazonaws:aws-java-sdk:${awsVersion}") {
        exclude group: "org.apache.httpcomponents", module: "httpclient"
        exclude group: "commons-logging", module: "commons-logging"
    }
    implementation("org.javatuples:javatuples:${javaTuplesVersion}")
    implementation("io.springfox:springfox-swagger2:${springFoxVersion}")
    implementation("io.springfox:springfox-bean-validators:${springFoxVersion}")
    // implementation("io.springfox:springfox-data-rest:${springFoxVersion}")
    implementation("io.springfox:springfox-swagger-ui:${springFoxVersion}")
    implementation("org.javers:javers-spring-boot-starter-mongo:${javerVersion}") {
        exclude group: "org.mongodb", module: "mongo-java-driver"
    }
    implementation("io.jsonwebtoken:jjwt:${jwtVersion}")
    implementation("org.zalando:problem-spring-web:${problemVersion}")
    implementation("org.redisson:redisson:${redissonVersion}")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner")
    implementation("org.javassist:javassist:${javassistVersion}")
    implementation("com.github.mongobee:mongobee:${mongobeeVersion}") {
        exclude group: "org.mongodb", module: "mongo-java-driver"
    }
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.data:spring-data-elasticsearch")
    implementation("org.springframework.security:spring-security-messaging")
    implementation("net.java.dev.jna:jna")
    testImplementation("org.springframework.security:spring-security-test")
}
bootRun {
    systemProperties = System.properties as Map<String, ?>
    sourceResources sourceSets.main
}
