apply plugin: 'org.springframework.boot'
repositories {
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}
configurations {
    springLoaded
    // 如果使用 undertow 或 jetty 需要把默认包含的 tomcat 排除在外
    compile.exclude module: 'spring-boot-starter-tomcat'
}
sourceSets {
	main {
		java.srcDirs = ['src/main/java', 'src/main/resources']
		resources.srcDir 'src/main/resources'
	}
	test { java.srcDir 'src/test/java' }
}
test {
    systemProperties['spring.profiles.active'] = 'test'
}
dependencies {
    implementation("io.springfox:springfox-swagger2:${springFoxVersion}")
    implementation("io.springfox:springfox-bean-validators:${springFoxVersion}")
    implementation("io.springfox:springfox-data-rest:${springFoxVersion}")
    implementation("io.springfox:springfox-swagger-ui:${springFoxVersion}")
    implementation("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.javers:javers-spring-boot-starter-mongo:3.9.7")
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("io.jsonwebtoken:jjwt:0.9.0")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-aop")
    implementation("org.zalando:problem-spring-web:0.20.1")
    implementation("org.redisson:redisson:${redissonVersion}")
    implementation("com.fasterxml.jackson.module:jackson-module-afterburner")
    implementation("org.springframework.boot:spring-boot-starter-data-mongodb")
    implementation("org.springframework.boot:spring-boot-starter-data-redis")
    implementation("org.springframework.data:spring-data-elasticsearch")
    implementation("net.java.dev.jna:jna")
    testImplementation("org.springframework.security:spring-security-test")
}
bootRun {
    systemProperties = System.properties as Map<String, ?>
    sourceResources sourceSets.main
}
