version: '3.2'
services:
  elasticsearch:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/elasticsearch-wo-xpack:5.5.0
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - docker-app
  redis:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/redis:4-alpine
    command: [ "redis-server", "--protected-mode", "no" ]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - docker-app
  mongo:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/mongo:3.6.4
    ports:
      - "27017:27017"
    volumes:
      - api_db:/data/db
    networks:
      - docker-app
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672" # JMS 端口
      - "15672:15672" # 管理端口 default user:pass = guest:guest
    networks:
      - docker-app
  configserver:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/gtm-config
    ports:
      - 8888:8888
    depends_on:
      - rabbitmq
    networks:
      - docker-app
  discovery:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/gtm-discovery
    ports:
      - 8761:8761
    depends_on:
      - rabbitmq
      - configserver
    networks:
      - docker-app
  api-server:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/gtm-api-service
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "8080:8080"
      - "5005:5005"
    links:
      - mongo
      - redis
      - elasticsearch
    networks:
      - docker-app
  # nginx:
  #   build:
  #     context: .
  #     dockerfile: ./frontend/docker/nginx/Dockerfile
  #     args:
  #       - env=production
  #   container_name: nginx
  #   # volumes:
  #   #   - certs:/etc/letsencrypt
  #   #   - certs-data:/data/letsencrypt
  #   ports:
  #     - 80:80
      # - 443:443
volumes:
  api_db: {}
  redis-data: {}
  esdata: {}
networks:
  docker-app:
    driver: bridge
